// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MyExerciseApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250916155656_UpdatedEntities")]
    partial class UpdatedEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("MyExerciseApp.Entities.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExerciseGroup")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("MainTargetMuscle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkoutType")
                        .HasColumnType("TEXT");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("MyExerciseApp.Entities.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ShceduledWorkout")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("MyExerciseApp.Entities.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkoutName")
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("MyExerciseApp.Entities.WorkoutItem", b =>
                {
                    b.Property<int>("WorkoutId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reps")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sets")
                        .HasColumnType("TEXT");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutItem");
                });

            modelBuilder.Entity("MyExerciseApp.Entities.Workout", b =>
                {
                    b.HasOne("MyExerciseApp.Entities.Schedule", null)
                        .WithMany("Workouts")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("MyExerciseApp.Entities.WorkoutItem", b =>
                {
                    b.HasOne("MyExerciseApp.Entities.Exercise", "Exercise")
                        .WithMany("WorkoutItems")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyExerciseApp.Entities.Workout", "Workout")
                        .WithMany("WorkoutItems")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("MyExerciseApp.Entities.Exercise", b =>
                {
                    b.Navigation("WorkoutItems");
                });

            modelBuilder.Entity("MyExerciseApp.Entities.Schedule", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("MyExerciseApp.Entities.Workout", b =>
                {
                    b.Navigation("WorkoutItems");
                });
#pragma warning restore 612, 618
        }
    }
}
